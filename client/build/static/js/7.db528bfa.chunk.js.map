{"version":3,"sources":["../static/js/7.db528bfa.chunk.js","containers/EmailsContainer/EmailsContainer.jsx","containers/NavContainer/NavContainer.jsx","components/Navigation/Nav.jsx","webpack:///./src/components/Navigation/Navigation.css?be7e","components/Navigation/Navigation.css","../node_modules/moment/moment.js","../node_modules/webpack/buildin/module.js","components/Error/Error.jsx","webpack:///./src/components/Error/Error.css?d762","components/Error/Error.css","actions/email-actions.js","components/Emails/Emails.jsx","webpack:///./src/components/Emails/Emails.css?7704","components/Emails/Emails.css"],"names":["webpackJsonp","675","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_react_redux__","__WEBPACK_IMPORTED_MODULE_2_prop_types__","__WEBPACK_IMPORTED_MODULE_2_prop_types___default","__WEBPACK_IMPORTED_MODULE_3_react_router_dom__","__WEBPACK_IMPORTED_MODULE_4_axios__","__WEBPACK_IMPORTED_MODULE_4_axios___default","__WEBPACK_IMPORTED_MODULE_5__components_Emails_Emails__","__WEBPACK_IMPORTED_MODULE_6__components_Error_Error__","__WEBPACK_IMPORTED_MODULE_7__NavContainer_NavContainer__","__WEBPACK_IMPORTED_MODULE_8__actions_email_actions__","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","EmailsContainer","_React$Component","this","_this","getPrototypeOf","createContact","bind","onScroll","fetchEmails","maxResults","pageToken","emails","window","addEventListener","removeEventListener","innerHeight","scrollY","document","body","offsetHeight","isLoading","email","name","_this2","a","post","then","res","history","push","data","id","isAuthed","createElement","isFetching","errorText","error","to","Component","mapStateToProps","state","authReducer","emailReducer","mapDispatchToProps","clearEmails","propTypes","bool","isRequired","array","number","string","func","688","__WEBPACK_IMPORTED_MODULE_2_react_router_redux__","__WEBPACK_IMPORTED_MODULE_3_prop_types__","__WEBPACK_IMPORTED_MODULE_3_prop_types___default","__WEBPACK_IMPORTED_MODULE_4__components_Navigation_Nav__","__WEBPACK_IMPORTED_MODULE_5__actions_auth_actions__","NavContainer","handleLogout","logout","user","689","__WEBPACK_IMPORTED_MODULE_1_react_router_dom__","__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__","__WEBPACK_IMPORTED_MODULE_4__Navigation_css__","Navigation","_ref","profile","inverse","className","Header","Brand","Toggle","Collapse","Contacts","Listings","Campaigns","Emails","pullRight","Profile","ProfilePic","_ref2","eventKey","onSelect","_ref3","_ref4","_ref5","_ref6","title","firstName","divider","onClick","_ref7","src","googlePhoto","alt","690","exports","content","options","hmr","transform","locals","691","version","sources","names","mappings","file","sourcesContent","sourceRoot","700","global","factory","hooks","hookCallback","apply","arguments","isArray","input","Array","toString","isObject","isObjectEmpty","obj","getOwnPropertyNames","k","hasOwnProperty","isUndefined","isNumber","isDate","Date","map","arr","fn","hasOwnProp","b","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","m","_pf","isValid","_isValid","flags","parsedParts","some","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","copyConfig","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","absFloor","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","isFinite","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","args","slice","join","Error","stack","deprecateSimple","deprecations","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","RegExp","_dayOfMonthOrdinalParse","source","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","calendar","mom","now","output","_calendar","longDateFormat","_longDateFormat","formatUpper","toUpperCase","replace","invalidDate","_invalidDate","ordinal","_ordinal","relativeTime","withoutSuffix","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","u","sort","zeroFill","targetLength","forceSign","absNumber","zerosToFill","pow","max","substr","addFormatToken","token","padded","callback","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","test","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","s","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInYear","year","isLeapYear","getIsLeapYear","makeGetSet","keepTime","set$1","get","month","date","daysInMonth","stringGet","stringSet","prioritized","mod","x","modMonth","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","months","indexOf","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","createDate","y","d","h","M","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","add","getSetISOWeek","parseWeekday","weekdaysParse","parseInt","parseIsoWeekday","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","weekdaysMin","weekdaysShort","weekdays","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","normalizeLocale","chooseLocale","j","next","split","loadLocale","globalLocale","oldLocale","locales","_abbr","e","code","getSetGlobalLocale","values","getLocale","defineLocale","baseConfig","abbr","parentLocale","localeFamilies","forEach","updateLocale","tmpLocale","listLocales","keys","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","defaults","c","currentDateArray","nowValue","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","exec","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","defaultLocaleMonthsShort","preprocessRFC2822","checkWeekday","weekdayStr","parsedInput","defaultLocaleWeekdaysShort","calculateOffset","obsOffset","militaryOffset","numOffset","obsOffsets","hm","configFromRFC2822","parsedArray","configFromString","aspNetJsonRegex","createFromInputFallback","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","ordering","unitHasDecimal","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","days","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","sign","offsetFromString","matcher","matches","chunk","parts","chunkOffset","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","time","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","keepOffset","toDate","inspect","zone","prefix","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","clone$1","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","ss","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","withSuffix","toISOString$1","abs$1","Y","D","toFixed","total","asSeconds","totalSign","ymSign","daysSign","hmsSign","fun","t","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultDayOfMonthOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","parseTwoDigitYear","getSetYear","o","defaultLocaleMonths","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysMin","kInput","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","dayOfMonthOrdinalParse","meridiemParse","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","prototypeMin","prototypeMax","invalid","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","relativeTimeRounding","relativeTimeThreshold","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","701","webpackPolyfill","paths","children","708","__WEBPACK_IMPORTED_MODULE_1_prop_types__","__WEBPACK_IMPORTED_MODULE_1_prop_types___default","__WEBPACK_IMPORTED_MODULE_2_react_bootstrap__","__WEBPACK_IMPORTED_MODULE_3__Error_css__","Errors","xs","709","710","721","_asyncToGenerator","gen","Promise","resolve","reject","step","info","done","err","setEmailQuery","clearEmail","clearError","fetchEmail","fetchEmailsByContact","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default","__WEBPACK_IMPORTED_MODULE_1_axios__","__WEBPACK_IMPORTED_MODULE_1_axios___default","__WEBPACK_IMPORTED_MODULE_2__types__","setEmails","type","setEmail","setEmailsByContact","emailsByContact","emailQuery","setError","emailsArray","mark","_callee","dispatch","wrap","_context","prev","sent","concat","emailArray","nextPageToken","t0","stop","_x","_callee2","_context2","_x2","query","_callee3","_context3","_x3","722","__WEBPACK_IMPORTED_MODULE_4_moment__","__WEBPACK_IMPORTED_MODULE_4_moment___default","__WEBPACK_IMPORTED_MODULE_5__Loading_Loading__","__WEBPACK_IMPORTED_MODULE_7__Emails_css__","emailError","striped","emailAddress","subject","defaultProps","723","724"],"mappings":"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","file":"static/js/7.db528bfa.chunk.js","sourcesContent":["webpackJsonp([7],{\n\n/***/ 675:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_router_dom__ = __webpack_require__(254);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_axios__ = __webpack_require__(255);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_Emails_Emails__ = __webpack_require__(722);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_Error_Error__ = __webpack_require__(708);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__NavContainer_NavContainer__ = __webpack_require__(688);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__actions_email_actions__ = __webpack_require__(721);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}// import { clearError } from \"../../actions/common-actions\";\nvar EmailsContainer=function(_React$Component){_inherits(EmailsContainer,_React$Component);function EmailsContainer(props){_classCallCheck(this,EmailsContainer);var _this=_possibleConstructorReturn(this,(EmailsContainer.__proto__||Object.getPrototypeOf(EmailsContainer)).call(this,props));_this.createContact=_this.createContact.bind(_this);_this.onScroll=_this.onScroll.bind(_this);return _this;}_createClass(EmailsContainer,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.fetchEmails(this.props.maxResults,this.props.pageToken,this.props.emails);window.addEventListener(\"scroll\",this.onScroll,false);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.removeEventListener(\"scroll\",this.onScroll,false);// this.props.clearError();\n// this.props.clearEmails();\n}},{key:\"onScroll\",value:function onScroll(){if(window.innerHeight+window.scrollY>=document.body.offsetHeight-500&&this.props.emails.length&&!this.props.isLoading){this.props.fetchEmails(this.props.maxResults,this.props.pageToken,this.props.emails);}}// Still working??? //  MOVE TO CONTACT REDUCER...\n},{key:\"createContact\",value:function createContact(email,name){var _this2=this;return __WEBPACK_IMPORTED_MODULE_4_axios___default.a.post(\"api/email/gmail/fetchcontact\",{email:email,name:name}).then(function(res){_this2.props.history.push(\"contact/\"+res.data.id);});}},{key:\"render\",value:function render(){return this.props.isAuthed?__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__NavContainer_NavContainer__[\"a\" /* default */],null),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__components_Emails_Emails__[\"a\" /* default */],{emails:this.props.emails,isFetching:this.props.isFetching,createContact:this.createContact}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__components_Error_Error__[\"a\" /* default */],{errorText:this.props.error})):__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_router_dom__[\"b\" /* Redirect */],{push:true,to:\"/\"});}}]);return EmailsContainer;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);var mapStateToProps=function mapStateToProps(state){return{isAuthed:state.authReducer.isAuthed,emails:state.emailReducer.emails,maxResults:state.emailReducer.maxResults,pageToken:state.emailReducer.pageToken,isFetching:state.emailReducer.isFetching,isLoading:state.emailReducer.isLoading,error:state.emailReducer.error};};var mapDispatchToProps={fetchEmails:__WEBPACK_IMPORTED_MODULE_8__actions_email_actions__[\"e\" /* fetchEmails */],clearEmails:__WEBPACK_IMPORTED_MODULE_8__actions_email_actions__[\"b\" /* clearEmails */]};EmailsContainer.propTypes={isAuthed:__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool.isRequired,emails:__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.array.isRequired,maxResults:__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number.isRequired,pageToken:__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string.isRequired,isFetching:__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool.isRequired,isLoading:__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool.isRequired,error:__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string.isRequired,fetchEmails:__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func.isRequired// clearEmails: PropTypes.func.isRequired,\n// clearError: PropTypes.func.isRequired\n};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__[\"b\" /* connect */])(mapStateToProps,mapDispatchToProps)(EmailsContainer));\n\n/***/ }),\n\n/***/ 688:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_router_redux__ = __webpack_require__(139);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Navigation_Nav__ = __webpack_require__(689);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__actions_auth_actions__ = __webpack_require__(257);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var NavContainer=function(_React$Component){_inherits(NavContainer,_React$Component);function NavContainer(props){_classCallCheck(this,NavContainer);var _this=_possibleConstructorReturn(this,(NavContainer.__proto__||Object.getPrototypeOf(NavContainer)).call(this,props));_this.handleLogout=_this.handleLogout.bind(_this);return _this;}_createClass(NavContainer,[{key:\"handleLogout\",value:function handleLogout(){this.props.logout();this.props.push(\"/\");}},{key:\"render\",value:function render(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__components_Navigation_Nav__[\"a\" /* default */],{logout:this.handleLogout,user:this.props.user,isAuthed:this.props.isAuthed,push:this.props.push});}}]);return NavContainer;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);var mapStateToProps=function mapStateToProps(state){return{user:state.authReducer.user,isAuthed:state.authReducer.isAuthed};};NavContainer.propTypes={logout:__WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.func.isRequired,isAuthed:__WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.bool.isRequired};/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__[\"b\" /* connect */])(mapStateToProps,{logout:__WEBPACK_IMPORTED_MODULE_5__actions_auth_actions__[\"b\" /* logout */],push:__WEBPACK_IMPORTED_MODULE_2_react_router_redux__[\"b\" /* push */]})(NavContainer));\n\n/***/ }),\n\n/***/ 689:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_router_dom__ = __webpack_require__(254);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_bootstrap__ = __webpack_require__(253);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Navigation_css__ = __webpack_require__(690);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Navigation_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__Navigation_css__);\nvar Navigation=function Navigation(_ref){var isAuthed=_ref.isAuthed,user=_ref.user,logout=_ref.logout,profile=_ref.profile,push=_ref.push;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"m\" /* Navbar */],{inverse:true,className:\"NavContainer\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"m\" /* Navbar */].Header,null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"m\" /* Navbar */].Brand,null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_router_dom__[\"a\" /* Link */],{to:\"/dashboard\"},\"LeadCloud\")),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"m\" /* Navbar */].Toggle,{className:\"toggle\"})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"m\" /* Navbar */].Collapse,null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"j\" /* Nav */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Contacts,{isAuthed:isAuthed,push:push}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Listings,{isAuthed:isAuthed,push:push}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Campaigns,{isAuthed:isAuthed,push:push}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Emails,{isAuthed:isAuthed,push:push})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"j\" /* Nav */],{className:\"navContainerRight\",pullRight:true},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Profile,{isAuthed:isAuthed,user:user,logout:logout,profile:profile,push:push}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ProfilePic,{user:user,isAuthed:isAuthed}))));};var Contacts=function Contacts(_ref2){var isAuthed=_ref2.isAuthed,push=_ref2.push;return isAuthed&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"i\" /* MenuItem */],{className:\"menuItem\",eventKey:\"2\",onSelect:function onSelect(){return push(\"/contacts\");}},\"Contacts\");};var Listings=function Listings(_ref3){var isAuthed=_ref3.isAuthed,push=_ref3.push;return isAuthed&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"i\" /* MenuItem */],{className:\"menuItem\",eventKey:\"3\",onSelect:function onSelect(){return push(\"/listings\");}},\"Listings\");};var Emails=function Emails(_ref4){var isAuthed=_ref4.isAuthed,push=_ref4.push;return isAuthed&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"i\" /* MenuItem */],{className:\"menuItem\",eventKey:\"1\",onSelect:function onSelect(){return push(\"/emails\");}},\"Messages\");};// const Groups = ({ isAuthed, push }) =>\n//   isAuthed && (\n//     <MenuItem\n//       className=\"menuItem\"\n//       eventKey=\"1\"\n//       onSelect={() => push(\"/groups\")}\n//     >\n//       Groups\n//     </MenuItem>\n//   );\nvar Campaigns=function Campaigns(_ref5){var isAuthed=_ref5.isAuthed,push=_ref5.push;return isAuthed&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"i\" /* MenuItem */],{className:\"menuItem\",eventKey:\"1\",onSelect:function onSelect(){return push(\"/campaigns\");}},\"Campaigns\");};var Profile=function Profile(_ref6){var isAuthed=_ref6.isAuthed,user=_ref6.user,logout=_ref6.logout,push=_ref6.push;return isAuthed&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"k\" /* NavDropdown */],{className:\"menuItem\",eventKey:2,title:\"Welcome, \"+user.firstName+\"!\",id:\"basic-nav-dropdown\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"i\" /* MenuItem */],{className:\"menuItem\",eventKey:\"3\",onSelect:function onSelect(){return push(\"/profile\");}},\"Profile\"),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"i\" /* MenuItem */],{divider:true}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"i\" /* MenuItem */],{onClick:function onClick(){push(\"/\");logout();},eventKey:2.4},\"Logout\"));};var ProfilePic=function ProfilePic(_ref7){var isAuthed=_ref7.isAuthed,user=_ref7.user;return isAuthed&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_router_dom__[\"a\" /* Link */],{className:\"navitem\",to:\"/profile\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"img\",{className:\"navProfilePic\",src:user.googlePhoto||null,alt:\"profile pic\"})));};/* harmony default export */ __webpack_exports__[\"a\"] = (Navigation);\n\n/***/ }),\n\n/***/ 690:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(691);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":false}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(670)(content, options);\nif(content.locals) module.exports = content.locals;\n\n\n/***/ }),\n\n/***/ 691:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(669)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".NavContainer{margin-left:0;border-radius:0}.menuItem a{background-color:transparent!important;outline:none!important}.navProfilePic{border-radius:50%;width:32px;height:32px}.navContainerRight{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center}\", \"\", {\"version\":3,\"sources\":[\"/Users/Alex_K/Dropbox/Development/Portfolio/leadcloud-v5/client/src/components/Navigation/Navigation.css\"],\"names\":[],\"mappings\":\"AAAA,cACE,cAAiB,AACjB,eAAmB,CACpB,AAED,YACE,uCAAyC,AACzC,sBAAyB,CAC1B,AAED,eACE,kBAAmB,AACnB,WAAY,AACZ,WAAa,CACd,AAED,mBACE,oBAAqB,AACrB,aAAc,AACd,uBAAwB,AACpB,mBAAoB,AACxB,sBAAuB,AACnB,kBAAoB,CACzB\",\"file\":\"Navigation.css\",\"sourcesContent\":[\".NavContainer {\\n  margin-left: 0px;\\n  border-radius: 0px;\\n}\\n\\n.menuItem a {\\n  background-color: transparent !important;\\n  outline: none !important;\\n}\\n\\n.navProfilePic {\\n  border-radius: 50%;\\n  width: 32px;\\n  height: 32px;\\n}\\n\\n.navContainerRight {\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-direction: row;\\n      flex-direction: row;\\n  -ms-flex-align: center;\\n      align-items: center;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 700:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js\n\n;(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        if (!m) {\n            return isArray(this._weekdays) ? this._weekdays :\n                this._weekdays['standalone'];\n        }\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                !(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./locale\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input,units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input,units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n            case 'date':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n\n        // 'date' is an alias for 'day', so it should be considered as such.\n        if (units === 'date') {\n            units = 'day';\n        }\n\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.22.2';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(701)(module)))\n\n/***/ }),\n\n/***/ 701:\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n/***/ }),\n\n/***/ 708:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_bootstrap__ = __webpack_require__(253);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Error_css__ = __webpack_require__(709);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Error_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__Error_css__);\nvar Errors=function Errors(_ref){var errorText=_ref.errorText;return errorText&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_bootstrap__[\"g\" /* Grid */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_bootstrap__[\"n\" /* Row */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_bootstrap__[\"b\" /* Col */],{xs:12},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",{className:\"error\"},errorText))));};/* harmony default export */ __webpack_exports__[\"a\"] = (Errors);Errors.propTypes={errorText:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string.isRequired};\n\n/***/ }),\n\n/***/ 709:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(710);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":false}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(670)(content, options);\nif(content.locals) module.exports = content.locals;\n\n\n/***/ }),\n\n/***/ 710:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(669)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".error{color:red;margin-top:25px}\", \"\", {\"version\":3,\"sources\":[\"/Users/Alex_K/Dropbox/Development/Portfolio/leadcloud-v5/client/src/components/Error/Error.css\"],\"names\":[],\"mappings\":\"AAAA,OACE,UAAW,AACX,eAAiB,CAClB\",\"file\":\"Error.css\",\"sourcesContent\":[\".error {\\n  color: red;\\n  margin-top: 25px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 721:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export setEmails */\n/* unused harmony export setEmail */\n/* unused harmony export setEmailsByContact */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return setEmailQuery; });\n/* unused harmony export isFetching */\n/* unused harmony export isLoading */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return clearEmails; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return clearEmail; });\n/* unused harmony export setError */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return clearError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return fetchEmails; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return fetchEmail; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return fetchEmailsByContact; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(256);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_axios__ = __webpack_require__(255);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__types__ = __webpack_require__(23);\nvar _this=this;function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}/* ------------   ACTION CREATORS     ------------------ */var setEmails=function setEmails(emails,pageToken){return{type:__WEBPACK_IMPORTED_MODULE_2__types__[\"C\" /* SET_EMAILS */],emails:emails,pageToken:pageToken};};var setEmail=function setEmail(email){return{type:__WEBPACK_IMPORTED_MODULE_2__types__[\"B\" /* SET_EMAIL */],email:email};};// END OF TESTING FOR NOW HERE....\nvar setEmailsByContact=function setEmailsByContact(emailsByContact,pageToken){return{type:__WEBPACK_IMPORTED_MODULE_2__types__[\"D\" /* SET_EMAILS_BY_CONTACT */],emailsByContact:emailsByContact,pageToken:pageToken};};var setEmailQuery=function setEmailQuery(emailQuery){return{type:__WEBPACK_IMPORTED_MODULE_2__types__[\"F\" /* SET_EMAIL_QUERY */],emailQuery:emailQuery};};var isFetching=function isFetching(bool){return{type:__WEBPACK_IMPORTED_MODULE_2__types__[\"o\" /* IS_FETCHING */],isFetching:bool};};var isLoading=function isLoading(bool){return{type:__WEBPACK_IMPORTED_MODULE_2__types__[\"q\" /* IS_LOADING */],isLoading:bool};};var clearEmails=function clearEmails(){return{type:__WEBPACK_IMPORTED_MODULE_2__types__[\"g\" /* CLEAR_EMAILS */]};};var clearEmail=function clearEmail(){return{type:__WEBPACK_IMPORTED_MODULE_2__types__[\"f\" /* CLEAR_EMAIL */]};};var setError=function setError(error){return{type:__WEBPACK_IMPORTED_MODULE_2__types__[\"G\" /* SET_ERROR */],error:error};};var clearError=function clearError(){return{type:__WEBPACK_IMPORTED_MODULE_2__types__[\"h\" /* CLEAR_ERROR */]};};/* ------------       DISPATCHERS     ------------------ */var fetchEmails=function fetchEmails(maxResults,pageToken,emailsArray){return function(){var _ref=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee(dispatch){var res;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!pageToken)dispatch(isFetching(true));dispatch(isLoading(true));_context.prev=2;_context.next=5;return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.get(\"/api/email/gmail?maxResults=\"+maxResults+\"&pageToken=\"+pageToken);case 5:res=_context.sent;dispatch(setEmails(emailsArray.concat(res.data.emailArray),res.data.nextPageToken));dispatch(isFetching(false));dispatch(isLoading(false));_context.next=15;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](2);console.error(\"Fetching emails from gmail unsuccessful\",_context.t0);dispatch(isFetching(false));case 15:case\"end\":return _context.stop();}}},_callee,_this,[[2,11]]);}));return function(_x){return _ref.apply(this,arguments);};}();};var fetchEmail=function fetchEmail(id){return function(){var _ref2=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee2(dispatch){var res;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(isFetching(true));_context2.prev=1;_context2.next=4;return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.get(\"/api/email/gmail/\"+id);case 4:res=_context2.sent;dispatch(setEmail(res.data));dispatch(isFetching(false));// dispatch(getNextPageToken(res.data.nextPageToken))\n_context2.next=13;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](1);console.error(\"Fetching single email unsuccessful\",_context2.t0);dispatch(isFetching(false));case 13:case\"end\":return _context2.stop();}}},_callee2,_this,[[1,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};var fetchEmailsByContact=function fetchEmailsByContact(query,maxResults,pageToken,emailsArray){return function(){var _ref3=_asyncToGenerator(/*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee3(dispatch){var res;return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch(isLoading(true));_context3.prev=1;_context3.next=4;return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.get(\"/api/email/gmail?maxResults=\"+maxResults+\"&pageToken=\"+pageToken+\"&q=\"+query);case 4:res=_context3.sent;dispatch(setEmailsByContact(emailsArray.concat(res.data.emailArray),res.data.nextPageToken));dispatch(isLoading(false));_context3.next=14;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](1);console.error(\"Fetching emails by contact unsuccessful\",_context3.t0);dispatch(setError(\"ERROR FETCHING EMAILS BY CONTACT\"));dispatch(isLoading(false));case 14:case\"end\":return _context3.stop();}}},_callee3,_this,[[1,9]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};\n\n/***/ }),\n\n/***/ 722:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_router_dom__ = __webpack_require__(254);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_bootstrap__ = __webpack_require__(253);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_moment__ = __webpack_require__(700);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_moment__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Loading_Loading__ = __webpack_require__(259);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Error_Error__ = __webpack_require__(708);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Emails_css__ = __webpack_require__(723);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Emails_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7__Emails_css__);\nvar Emails=function Emails(_ref){var emails=_ref.emails,createContact=_ref.createContact,isFetching=_ref.isFetching,emailError=_ref.emailError;return isFetching?__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__Loading_Loading__[\"a\" /* default */],null):__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"g\" /* Grid */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"n\" /* Row */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"b\" /* Col */],{xs:12},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap__[\"o\" /* Table */],{striped:true},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"thead\",null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"tr\",null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"th\",null,\"Sender\"),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"th\",null,\"Subject\"),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"th\",null,\"Date\"))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"tbody\",null,emails&&emails.map(function(email){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"tr\",{key:email.id},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"td\",{className:\"emailTable\",id:\"sender\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"a\",{onClick:function onClick(){return createContact(email.emailAddress,email.name);}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"span\",{className:\"emailAddress\"},email.name))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"td\",{id:\"email-subject\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_router_dom__[\"a\" /* Link */],{to:\"/email/\"+email.id},email.subject)),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"td\",{id:\"email-date\"},__WEBPACK_IMPORTED_MODULE_4_moment___default()(email.date).format(\"ddd, M/D/YY h:mma\")));}))))));};/* harmony default export */ __webpack_exports__[\"a\"] = (Emails);Emails.propTypes={emails:__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.array.isRequired,createContact:__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func.isRequired,isFetching:__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool.isRequired,emailError:__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string.isRequired};Emails.defaultProps={emails:[],createContact:function createContact(){},isFetching:false,emailError:\"\"};\n\n/***/ }),\n\n/***/ 723:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(724);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":false}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(670)(content, options);\nif(content.locals) module.exports = content.locals;\n\n\n/***/ }),\n\n/***/ 724:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(669)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".emailAddress{word-wrap:break-word}@media (max-width:425px){.emailTable{max-width:130px}}\", \"\", {\"version\":3,\"sources\":[\"/Users/Alex_K/Dropbox/Development/Portfolio/leadcloud-v5/client/src/components/Emails/Emails.css\"],\"names\":[],\"mappings\":\"AAKA,cACE,oBAAsB,CACvB,AAED,yBACE,YACE,eAAiB,CAClB,CACF\",\"file\":\"Emails.css\",\"sourcesContent\":[\"/*.table {\\n  padding: 0;\\n}\\n*/\\n\\n.emailAddress {\\n  word-wrap: break-word;\\n}\\n\\n@media (max-width: 425px) {\\n  .emailTable {\\n    max-width: 130px;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/7.db528bfa.chunk.js","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Emails from \"../../components/Emails/Emails\";\nimport Errors from \"../../components/Error/Error\";\nimport Navigation from \"../NavContainer/NavContainer\";\nimport { fetchEmails, clearEmails } from \"../../actions/email-actions\";\n// import { clearError } from \"../../actions/common-actions\";\n\nclass EmailsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.createContact = this.createContact.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchEmails(\n      this.props.maxResults,\n      this.props.pageToken,\n      this.props.emails\n    );\n    window.addEventListener(\"scroll\", this.onScroll, false);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.onScroll, false);\n    // this.props.clearError();\n    // this.props.clearEmails();\n  }\n\n  onScroll() {\n    if (\n      window.innerHeight + window.scrollY >= document.body.offsetHeight - 500 &&\n      this.props.emails.length &&\n      !this.props.isLoading\n    ) {\n      this.props.fetchEmails(\n        this.props.maxResults,\n        this.props.pageToken,\n        this.props.emails\n      );\n    }\n  }\n\n  // Still working??? //  MOVE TO CONTACT REDUCER...\n  createContact(email, name) {\n    return axios\n      .post(\"api/email/gmail/fetchcontact\", {\n        email,\n        name\n      })\n      .then(res => {\n        this.props.history.push(`contact/${res.data.id}`);\n      });\n  }\n\n  render() {\n    return this.props.isAuthed ? (\n      <div>\n        <Navigation />\n        <Emails\n          emails={this.props.emails}\n          isFetching={this.props.isFetching}\n          createContact={this.createContact}\n        />\n        <Errors errorText={this.props.error} />\n      </div>\n    ) : (\n      <Redirect push to=\"/\" />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthed: state.authReducer.isAuthed,\n  emails: state.emailReducer.emails,\n  maxResults: state.emailReducer.maxResults,\n  pageToken: state.emailReducer.pageToken,\n  isFetching: state.emailReducer.isFetching,\n  isLoading: state.emailReducer.isLoading,\n  error: state.emailReducer.error\n});\n\nconst mapDispatchToProps = { fetchEmails, clearEmails };\n\nEmailsContainer.propTypes = {\n  isAuthed: PropTypes.bool.isRequired,\n  emails: PropTypes.array.isRequired,\n  maxResults: PropTypes.number.isRequired,\n  pageToken: PropTypes.string.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired,\n  fetchEmails: PropTypes.func.isRequired\n  // clearEmails: PropTypes.func.isRequired,\n  // clearError: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmailsContainer);\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/EmailsContainer/EmailsContainer.jsx","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { push } from \"react-router-redux\";\nimport PropTypes from \"prop-types\";\nimport Nav from \"../../components/Navigation/Nav\";\nimport { logout } from \"../../actions/auth-actions\";\n\nclass NavContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleLogout() {\n    this.props.logout();\n    this.props.push(\"/\");\n  }\n\n  render() {\n    return (\n      <Nav\n        logout={this.handleLogout}\n        user={this.props.user}\n        isAuthed={this.props.isAuthed}\n        push={this.props.push}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.authReducer.user,\n  isAuthed: state.authReducer.isAuthed\n});\n\nNavContainer.propTypes = {\n  logout: PropTypes.func.isRequired,\n  isAuthed: PropTypes.bool.isRequired\n};\n\nexport default connect(mapStateToProps, { logout, push })(NavContainer);\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/NavContainer/NavContainer.jsx","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Navbar, Nav, NavDropdown, MenuItem } from \"react-bootstrap\";\nimport \"./Navigation.css\";\n\nconst Navigation = ({ isAuthed, user, logout, profile, push }) => (\n  <Navbar inverse className=\"NavContainer\">\n    <Navbar.Header>\n      <Navbar.Brand>\n        <Link to=\"/dashboard\">LeadCloud</Link>\n      </Navbar.Brand>\n      <Navbar.Toggle className=\"toggle\" />\n    </Navbar.Header>\n\n    <Navbar.Collapse>\n      <Nav>\n        <Contacts isAuthed={isAuthed} push={push} />\n        <Listings isAuthed={isAuthed} push={push} />\n        {/*<Groups isAuthed={isAuthed} push={push} />*/}\n        <Campaigns isAuthed={isAuthed} push={push} />\n        <Emails isAuthed={isAuthed} push={push} />\n      </Nav>\n      <Nav className=\"navContainerRight\" pullRight>\n        <Profile\n          isAuthed={isAuthed}\n          user={user}\n          logout={logout}\n          profile={profile}\n          push={push}\n        />\n        <ProfilePic user={user} isAuthed={isAuthed} />\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n);\n\nconst Contacts = ({ isAuthed, push }) =>\n  isAuthed && (\n    <MenuItem\n      className=\"menuItem\"\n      eventKey=\"2\"\n      onSelect={() => push(\"/contacts\")}\n    >\n      Contacts\n    </MenuItem>\n  );\n\nconst Listings = ({ isAuthed, push }) =>\n  isAuthed && (\n    <MenuItem\n      className=\"menuItem\"\n      eventKey=\"3\"\n      onSelect={() => push(\"/listings\")}\n    >\n      Listings\n    </MenuItem>\n  );\n\nconst Emails = ({ isAuthed, push }) =>\n  isAuthed && (\n    <MenuItem\n      className=\"menuItem\"\n      eventKey=\"1\"\n      onSelect={() => push(\"/emails\")}\n    >\n      Messages\n    </MenuItem>\n  );\n\n// const Groups = ({ isAuthed, push }) =>\n//   isAuthed && (\n//     <MenuItem\n//       className=\"menuItem\"\n//       eventKey=\"1\"\n//       onSelect={() => push(\"/groups\")}\n//     >\n//       Groups\n//     </MenuItem>\n//   );\n\nconst Campaigns = ({ isAuthed, push }) =>\n  isAuthed && (\n    <MenuItem\n      className=\"menuItem\"\n      eventKey=\"1\"\n      onSelect={() => push(\"/campaigns\")}\n    >\n      Campaigns\n    </MenuItem>\n  );\n\nconst Profile = ({ isAuthed, user, logout, push }) =>\n  isAuthed && (\n    <NavDropdown\n      className=\"menuItem\"\n      eventKey={2}\n      title={`Welcome, ${user.firstName}!`}\n      id=\"basic-nav-dropdown\"\n    >\n      <MenuItem\n        className=\"menuItem\"\n        eventKey=\"3\"\n        onSelect={() => push(\"/profile\")}\n      >\n        Profile\n      </MenuItem>\n\n      <MenuItem divider />\n      <MenuItem\n        onClick={() => {\n          push(\"/\");\n          logout();\n        }}\n        eventKey={2.4}\n      >\n        Logout\n      </MenuItem>\n    </NavDropdown>\n  );\n\nconst ProfilePic = ({ isAuthed, user }) =>\n  isAuthed && (\n    <Link className=\"navitem\" to=\"/profile\">\n      <div>\n        <img\n          className=\"navProfilePic\"\n          src={user.googlePhoto || null}\n          alt=\"profile pic\"\n        />\n      </div>\n    </Link>\n  );\n\nexport default Navigation;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Navigation/Nav.jsx","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../node_modules/postcss-loader/lib/index.js??postcss!./Navigation.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":false}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Navigation/Navigation.css\n// module id = 690\n// module chunks = 0 2 3 4 5 6 7 8 9 10 11 12 13","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".NavContainer{margin-left:0;border-radius:0}.menuItem a{background-color:transparent!important;outline:none!important}.navProfilePic{border-radius:50%;width:32px;height:32px}.navContainerRight{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center}\", \"\", {\"version\":3,\"sources\":[\"/Users/Alex_K/Dropbox/Development/Portfolio/leadcloud-v5/client/src/components/Navigation/Navigation.css\"],\"names\":[],\"mappings\":\"AAAA,cACE,cAAiB,AACjB,eAAmB,CACpB,AAED,YACE,uCAAyC,AACzC,sBAAyB,CAC1B,AAED,eACE,kBAAmB,AACnB,WAAY,AACZ,WAAa,CACd,AAED,mBACE,oBAAqB,AACrB,aAAc,AACd,uBAAwB,AACpB,mBAAoB,AACxB,sBAAuB,AACnB,kBAAoB,CACzB\",\"file\":\"Navigation.css\",\"sourcesContent\":[\".NavContainer {\\n  margin-left: 0px;\\n  border-radius: 0px;\\n}\\n\\n.menuItem a {\\n  background-color: transparent !important;\\n  outline: none !important;\\n}\\n\\n.navProfilePic {\\n  border-radius: 50%;\\n  width: 32px;\\n  height: 32px;\\n}\\n\\n.navContainerRight {\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-direction: row;\\n      flex-direction: row;\\n  -ms-flex-align: center;\\n      align-items: center;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"importLoaders\":1,\"minimize\":true,\"sourceMap\":true}!./node_modules/postcss-loader/lib?{\"ident\":\"postcss\",\"plugins\":[null,null]}!./src/components/Navigation/Navigation.css\n// module id = 691\n// module chunks = 0 2 3 4 5 6 7 8 9 10 11 12 13","//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        if (!m) {\n            return isArray(this._weekdays) ? this._weekdays :\n                this._weekdays['standalone'];\n        }\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input,units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input,units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n            case 'date':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n\n        // 'date' is an alias for 'day', so it should be considered as such.\n        if (units === 'date') {\n            units = 'day';\n        }\n\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.22.2';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/moment.js\n// module id = 700\n// module chunks = 2 3 4 6 7 9","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 701\n// module chunks = 2 3 4 6 7 9","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid, Col, Row } from \"react-bootstrap\";\nimport \"./Error.css\";\n\nconst Errors = ({ errorText }) =>\n  errorText && (\n    <Grid>\n      <Row>\n        <Col xs={12}>\n          <p className=\"error\">{errorText}</p>\n        </Col>\n      </Row>\n    </Grid>\n  );\n\nexport default Errors;\n\nErrors.propTypes = {\n  errorText: PropTypes.string.isRequired\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Error/Error.jsx","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../node_modules/postcss-loader/lib/index.js??postcss!./Error.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":false}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Error/Error.css\n// module id = 709\n// module chunks = 2 3 4 7","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".error{color:red;margin-top:25px}\", \"\", {\"version\":3,\"sources\":[\"/Users/Alex_K/Dropbox/Development/Portfolio/leadcloud-v5/client/src/components/Error/Error.css\"],\"names\":[],\"mappings\":\"AAAA,OACE,UAAW,AACX,eAAiB,CAClB\",\"file\":\"Error.css\",\"sourcesContent\":[\".error {\\n  color: red;\\n  margin-top: 25px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"importLoaders\":1,\"minimize\":true,\"sourceMap\":true}!./node_modules/postcss-loader/lib?{\"ident\":\"postcss\",\"plugins\":[null,null]}!./src/components/Error/Error.css\n// module id = 710\n// module chunks = 2 3 4 7","import axios from \"axios\";\nimport * as types from \"../types\";\n\n/* ------------   ACTION CREATORS     ------------------ */\n\nexport const setEmails = (emails, pageToken) => ({\n  type: types.SET_EMAILS,\n  emails,\n  pageToken\n});\n\nexport const setEmail = email => ({\n  type: types.SET_EMAIL,\n  email\n});\n\n// END OF TESTING FOR NOW HERE....\n\nexport const setEmailsByContact = (emailsByContact, pageToken) => ({\n  type: types.SET_EMAILS_BY_CONTACT,\n  emailsByContact,\n  pageToken\n});\n\nexport const setEmailQuery = emailQuery => ({\n  type: types.SET_EMAIL_QUERY,\n  emailQuery\n});\n\nexport const isFetching = bool => ({\n  type: types.IS_FETCHING,\n  isFetching: bool\n});\n\nexport const isLoading = bool => ({\n  type: types.IS_LOADING,\n  isLoading: bool\n});\n\nexport const clearEmails = () => ({\n  type: types.CLEAR_EMAILS\n});\n\nexport const clearEmail = () => ({\n  type: types.CLEAR_EMAIL\n});\n\nexport const setError = error => ({\n  type: types.SET_ERROR,\n  error\n});\n\nexport const clearError = () => ({\n  type: types.CLEAR_ERROR\n});\n\n/* ------------       DISPATCHERS     ------------------ */\n\nexport const fetchEmails = (\n  maxResults,\n  pageToken,\n  emailsArray\n) => async dispatch => {\n  if (!pageToken) dispatch(isFetching(true));\n  dispatch(isLoading(true));\n\n  try {\n    const res = await axios.get(\n      `/api/email/gmail?maxResults=${maxResults}&pageToken=${pageToken}`\n    );\n\n    dispatch(\n      setEmails(emailsArray.concat(res.data.emailArray), res.data.nextPageToken)\n    );\n\n    dispatch(isFetching(false));\n    dispatch(isLoading(false));\n  } catch (err) {\n    console.error(\"Fetching emails from gmail unsuccessful\", err);\n    dispatch(isFetching(false));\n  }\n};\n\nexport const fetchEmail = id => async dispatch => {\n  dispatch(isFetching(true));\n  try {\n    const res = await axios.get(`/api/email/gmail/${id}`);\n    dispatch(setEmail(res.data));\n    dispatch(isFetching(false));\n    // dispatch(getNextPageToken(res.data.nextPageToken))\n  } catch (err) {\n    console.error(\"Fetching single email unsuccessful\", err);\n    dispatch(isFetching(false));\n  }\n};\n\nexport const fetchEmailsByContact = (\n  query,\n  maxResults,\n  pageToken,\n  emailsArray\n) => async dispatch => {\n  dispatch(isLoading(true));\n  try {\n    const res = await axios.get(\n      `/api/email/gmail?maxResults=${maxResults}&pageToken=${pageToken}&q=${query}`\n    );\n    dispatch(\n      setEmailsByContact(\n        emailsArray.concat(res.data.emailArray),\n        res.data.nextPageToken\n      )\n    );\n    dispatch(isLoading(false));\n  } catch (err) {\n    console.error(\"Fetching emails by contact unsuccessful\", err);\n    dispatch(setError(\"ERROR FETCHING EMAILS BY CONTACT\"));\n    dispatch(isLoading(false));\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/email-actions.js","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Grid, Row, Col, Table } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport Loading from \"../Loading/Loading\";\nimport Errors from \"../Error/Error\";\nimport \"./Emails.css\";\n\nconst Emails = ({ emails, createContact, isFetching, emailError }) =>\n  isFetching ? (\n    <Loading />\n  ) : (\n    <Grid>\n      <Row>\n        <Col xs={12}>\n          <Table striped>\n            <thead>\n              <tr>\n                <th>Sender</th>\n                <th>Subject</th>\n                <th>Date</th>\n              </tr>\n            </thead>\n            <tbody>\n              {emails &&\n                emails.map(email => {\n                  return (\n                    <tr key={email.id}>\n                      <td className=\"emailTable\" id=\"sender\">\n                        <a\n                          onClick={() =>\n                            createContact(email.emailAddress, email.name)\n                          }\n                        >\n                          <span className=\"emailAddress\">{email.name}</span>\n                        </a>\n                      </td>\n\n                      <td id=\"email-subject\">\n                        <Link to={`/email/${email.id}`}>{email.subject}</Link>\n                      </td>\n\n                      <td id=\"email-date\">\n                        {moment(email.date).format(\"ddd, M/D/YY h:mma\")}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Grid>\n  );\n\nexport default Emails;\n\nEmails.propTypes = {\n  emails: PropTypes.array.isRequired,\n  createContact: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  emailError: PropTypes.string.isRequired\n};\n\nEmails.defaultProps = {\n  emails: [],\n  createContact: () => {},\n  isFetching: false,\n  emailError: \"\"\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Emails/Emails.jsx","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../node_modules/postcss-loader/lib/index.js??postcss!./Emails.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":false}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Emails/Emails.css\n// module id = 723\n// module chunks = 2 3 7","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".emailAddress{word-wrap:break-word}@media (max-width:425px){.emailTable{max-width:130px}}\", \"\", {\"version\":3,\"sources\":[\"/Users/Alex_K/Dropbox/Development/Portfolio/leadcloud-v5/client/src/components/Emails/Emails.css\"],\"names\":[],\"mappings\":\"AAKA,cACE,oBAAsB,CACvB,AAED,yBACE,YACE,eAAiB,CAClB,CACF\",\"file\":\"Emails.css\",\"sourcesContent\":[\"/*.table {\\n  padding: 0;\\n}\\n*/\\n\\n.emailAddress {\\n  word-wrap: break-word;\\n}\\n\\n@media (max-width: 425px) {\\n  .emailTable {\\n    max-width: 130px;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"importLoaders\":1,\"minimize\":true,\"sourceMap\":true}!./node_modules/postcss-loader/lib?{\"ident\":\"postcss\",\"plugins\":[null,null]}!./src/components/Emails/Emails.css\n// module id = 724\n// module chunks = 2 3 7"],"sourceRoot":""}